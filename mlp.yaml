!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.csv_dataset.CSVDataset {
      path: './results2.csv',
      task: 'classification',
      expect_labels: True,
      expect_headers: False,
      delimiter: ',',
      start_fraction: 0.9,
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers: [
                 !obj:pylearn2.models.mlp.Sigmoid {
                      layer_name: 'h0',
                      dim: 10,
                      sparse_init: 5,
                 }, !obj:pylearn2.models.mlp.Softmax {
                     layer_name: 'y',
                     n_classes: 2,
                     irange: 0.
                 }
                ],
        nvis: 10,
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        batch_size: 100 ,
        learning_rate: .1,
        monitoring_dataset:
            {
                'train' : *train,
                'valid' : !obj:pylearn2.datasets.csv_dataset.CSVDataset {
                                path: './train.csv',
                                expect_headers: False,
                                start_fraction: .9,
                          },
                'test'  : !obj:pylearn2.datasets.csv_dataset.CSVDataset {
                                path: './train.csv',
                                expect_headers: False,
                                end_fraction: .1,
                          }
            },
        termination_criterion: !obj:pylearn2.termination_criteria.MonitorBased {
            channel_name: "valid_y_misclass"
        }
    },
    extensions: [
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "./mlp_best.pkl"
        },
    ],
    save_path: "./mlp.pkl",
    save_freq: 1
}